// generated by cdk8s
import { ApiObject } from 'cdk8s';
import { Construct } from 'constructs';

/**
 * A SecurityGroup is a managed resource that represents an AWS VPC Security Group.
 *
 * @schema SecurityGroup
 */
export class SecurityGroup extends ApiObject {
  /**
   * Defines a "SecurityGroup" API object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: SecurityGroupOptions) {
    super(scope, name, {
      ...options,
      kind: 'SecurityGroup',
      apiVersion: 'ec2.aws.crossplane.io/v1beta1',
    });
  }
}

/**
 * A SecurityGroup is a managed resource that represents an AWS VPC Security Group.
 *
 * @schema SecurityGroup
 */
export interface SecurityGroupOptions {
  /**
   * @schema SecurityGroup#metadata
   */
  readonly metadata?: any;

  /**
   * A SecurityGroupSpec defines the desired state of a SecurityGroup.
   *
   * @schema SecurityGroup#spec
   */
  readonly spec: SecurityGroupSpec;

}

/**
 * A SecurityGroupSpec defines the desired state of a SecurityGroup.
 *
 * @schema SecurityGroupSpec
 */
export interface SecurityGroupSpec {
  /**
   * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
   *
   * @schema SecurityGroupSpec#deletionPolicy
   */
  readonly deletionPolicy?: SecurityGroupSpecDeletionPolicy;

  /**
   * SecurityGroupParameters define the desired state of an AWS VPC Security Group.
   *
   * @schema SecurityGroupSpec#forProvider
   */
  readonly forProvider: SecurityGroupSpecForProvider;

  /**
   * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
   *
   * @schema SecurityGroupSpec#providerConfigRef
   */
  readonly providerConfigRef?: SecurityGroupSpecProviderConfigRef;

  /**
   * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
   *
   * @schema SecurityGroupSpec#providerRef
   */
  readonly providerRef?: SecurityGroupSpecProviderRef;

  /**
   * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
   *
   * @schema SecurityGroupSpec#writeConnectionSecretToRef
   */
  readonly writeConnectionSecretToRef?: SecurityGroupSpecWriteConnectionSecretToRef;

}

/**
 * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
 *
 * @schema SecurityGroupSpecDeletionPolicy
 */
export enum SecurityGroupSpecDeletionPolicy {
  /** Orphan */
  ORPHAN = "Orphan",
  /** Delete */
  DELETE = "Delete",
}

/**
 * SecurityGroupParameters define the desired state of an AWS VPC Security Group.
 *
 * @schema SecurityGroupSpecForProvider
 */
export interface SecurityGroupSpecForProvider {
  /**
   * A description of the security group.
   *
   * @schema SecurityGroupSpecForProvider#description
   */
  readonly description: string;

  /**
   * [EC2-VPC] One or more outbound rules associated with the security group.
   *
   * @schema SecurityGroupSpecForProvider#egress
   */
  readonly egress?: SecurityGroupSpecForProviderEgress[];

  /**
   * The name of the security group.
   *
   * @schema SecurityGroupSpecForProvider#groupName
   */
  readonly groupName: string;

  /**
   * One or more inbound rules associated with the security group.
   *
   * @schema SecurityGroupSpecForProvider#ingress
   */
  readonly ingress?: SecurityGroupSpecForProviderIngress[];

  /**
   * Region is the region you'd like your SecurityGroup to be created in.
   *
   * @schema SecurityGroupSpecForProvider#region
   */
  readonly region?: string;

  /**
   * Tags represents to current ec2 tags.
   *
   * @schema SecurityGroupSpecForProvider#tags
   */
  readonly tags?: SecurityGroupSpecForProviderTags[];

  /**
   * VPCID is the ID of the VPC.
   *
   * @schema SecurityGroupSpecForProvider#vpcId
   */
  readonly vpcId?: string;

  /**
   * VPCIDRef references a VPC to and retrieves its vpcId
   *
   * @schema SecurityGroupSpecForProvider#vpcIdRef
   */
  readonly vpcIdRef?: SecurityGroupSpecForProviderVpcIdRef;

  /**
   * VPCIDSelector selects a reference to a VPC to and retrieves its vpcId
   *
   * @schema SecurityGroupSpecForProvider#vpcIdSelector
   */
  readonly vpcIdSelector?: SecurityGroupSpecForProviderVpcIdSelector;

}

/**
 * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
 *
 * @schema SecurityGroupSpecProviderConfigRef
 */
export interface SecurityGroupSpecProviderConfigRef {
  /**
   * Name of the referenced object.
   *
   * @schema SecurityGroupSpecProviderConfigRef#name
   */
  readonly name: string;

}

/**
 * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
 *
 * @schema SecurityGroupSpecProviderRef
 */
export interface SecurityGroupSpecProviderRef {
  /**
   * Name of the referenced object.
   *
   * @schema SecurityGroupSpecProviderRef#name
   */
  readonly name: string;

}

/**
 * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
 *
 * @schema SecurityGroupSpecWriteConnectionSecretToRef
 */
export interface SecurityGroupSpecWriteConnectionSecretToRef {
  /**
   * Name of the secret.
   *
   * @schema SecurityGroupSpecWriteConnectionSecretToRef#name
   */
  readonly name: string;

  /**
   * Namespace of the secret.
   *
   * @schema SecurityGroupSpecWriteConnectionSecretToRef#namespace
   */
  readonly namespace: string;

}

/**
 * IPPermission Describes a set of permissions for a security group rule.
 *
 * @schema SecurityGroupSpecForProviderEgress
 */
export interface SecurityGroupSpecForProviderEgress {
  /**
   * The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.
   *
   * @schema SecurityGroupSpecForProviderEgress#fromPort
   */
  readonly fromPort?: number;

  /**
   * The IP protocol name (tcp, udp, icmp, icmpv6) or number (see Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)). 
 [VPC only] Use -1 to specify all protocols. When authorizing security group rules, specifying -1 or a protocol number other than tcp, udp, icmp, or icmpv6 allows traffic on all ports, regardless of any port range you specify. For tcp, udp, and icmp, you must specify a port range. For icmpv6, the port range is optional; if you omit the port range, traffic for all types and codes is allowed.
   *
   * @schema SecurityGroupSpecForProviderEgress#ipProtocol
   */
  readonly ipProtocol: string;

  /**
   * The IPv4 ranges.
   *
   * @schema SecurityGroupSpecForProviderEgress#ipRanges
   */
  readonly ipRanges?: SecurityGroupSpecForProviderEgressIpRanges[];

  /**
   * The IPv6 ranges. 
 [VPC only]
   *
   * @schema SecurityGroupSpecForProviderEgress#ipv6Ranges
   */
  readonly ipv6Ranges?: SecurityGroupSpecForProviderEgressIpv6Ranges[];

  /**
   * PrefixListIDs for an AWS service. With outbound rules, this is the AWS service to access through a VPC endpoint from instances associated with the security group. 
 [VPC only]
   *
   * @schema SecurityGroupSpecForProviderEgress#prefixListIds
   */
  readonly prefixListIds?: SecurityGroupSpecForProviderEgressPrefixListIds[];

  /**
   * The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.
   *
   * @schema SecurityGroupSpecForProviderEgress#toPort
   */
  readonly toPort?: number;

  /**
   * UserIDGroupPairs are the source security group and AWS account ID pairs. It contains one or more accounts and security groups to allow flows from security groups of other accounts.
   *
   * @schema SecurityGroupSpecForProviderEgress#userIdGroupPairs
   */
  readonly userIdGroupPairs?: SecurityGroupSpecForProviderEgressUserIdGroupPairs[];

}

/**
 * IPPermission Describes a set of permissions for a security group rule.
 *
 * @schema SecurityGroupSpecForProviderIngress
 */
export interface SecurityGroupSpecForProviderIngress {
  /**
   * The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.
   *
   * @schema SecurityGroupSpecForProviderIngress#fromPort
   */
  readonly fromPort?: number;

  /**
   * The IP protocol name (tcp, udp, icmp, icmpv6) or number (see Protocol Numbers (http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)). 
 [VPC only] Use -1 to specify all protocols. When authorizing security group rules, specifying -1 or a protocol number other than tcp, udp, icmp, or icmpv6 allows traffic on all ports, regardless of any port range you specify. For tcp, udp, and icmp, you must specify a port range. For icmpv6, the port range is optional; if you omit the port range, traffic for all types and codes is allowed.
   *
   * @schema SecurityGroupSpecForProviderIngress#ipProtocol
   */
  readonly ipProtocol: string;

  /**
   * The IPv4 ranges.
   *
   * @schema SecurityGroupSpecForProviderIngress#ipRanges
   */
  readonly ipRanges?: SecurityGroupSpecForProviderIngressIpRanges[];

  /**
   * The IPv6 ranges. 
 [VPC only]
   *
   * @schema SecurityGroupSpecForProviderIngress#ipv6Ranges
   */
  readonly ipv6Ranges?: SecurityGroupSpecForProviderIngressIpv6Ranges[];

  /**
   * PrefixListIDs for an AWS service. With outbound rules, this is the AWS service to access through a VPC endpoint from instances associated with the security group. 
 [VPC only]
   *
   * @schema SecurityGroupSpecForProviderIngress#prefixListIds
   */
  readonly prefixListIds?: SecurityGroupSpecForProviderIngressPrefixListIds[];

  /**
   * The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of -1 indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.
   *
   * @schema SecurityGroupSpecForProviderIngress#toPort
   */
  readonly toPort?: number;

  /**
   * UserIDGroupPairs are the source security group and AWS account ID pairs. It contains one or more accounts and security groups to allow flows from security groups of other accounts.
   *
   * @schema SecurityGroupSpecForProviderIngress#userIdGroupPairs
   */
  readonly userIdGroupPairs?: SecurityGroupSpecForProviderIngressUserIdGroupPairs[];

}

/**
 * Tag defines a tag
 *
 * @schema SecurityGroupSpecForProviderTags
 */
export interface SecurityGroupSpecForProviderTags {
  /**
   * Key is the name of the tag.
   *
   * @schema SecurityGroupSpecForProviderTags#key
   */
  readonly key: string;

  /**
   * Value is the value of the tag.
   *
   * @schema SecurityGroupSpecForProviderTags#value
   */
  readonly value: string;

}

/**
 * VPCIDRef references a VPC to and retrieves its vpcId
 *
 * @schema SecurityGroupSpecForProviderVpcIdRef
 */
export interface SecurityGroupSpecForProviderVpcIdRef {
  /**
   * Name of the referenced object.
   *
   * @schema SecurityGroupSpecForProviderVpcIdRef#name
   */
  readonly name: string;

}

/**
 * VPCIDSelector selects a reference to a VPC to and retrieves its vpcId
 *
 * @schema SecurityGroupSpecForProviderVpcIdSelector
 */
export interface SecurityGroupSpecForProviderVpcIdSelector {
  /**
   * MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
   *
   * @schema SecurityGroupSpecForProviderVpcIdSelector#matchControllerRef
   */
  readonly matchControllerRef?: boolean;

  /**
   * MatchLabels ensures an object with matching labels is selected.
   *
   * @schema SecurityGroupSpecForProviderVpcIdSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * IPRange describes an IPv4 range.
 *
 * @schema SecurityGroupSpecForProviderEgressIpRanges
 */
export interface SecurityGroupSpecForProviderEgressIpRanges {
  /**
   * The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length.
   *
   * @schema SecurityGroupSpecForProviderEgressIpRanges#cidrIp
   */
  readonly cidrIp: string;

  /**
   * A description for the security group rule that references this IPv4 address range. 
 Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*
   *
   * @schema SecurityGroupSpecForProviderEgressIpRanges#description
   */
  readonly description?: string;

}

/**
 * IPv6Range describes an IPv6 range.
 *
 * @schema SecurityGroupSpecForProviderEgressIpv6Ranges
 */
export interface SecurityGroupSpecForProviderEgressIpv6Ranges {
  /**
   * The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length.
   *
   * @schema SecurityGroupSpecForProviderEgressIpv6Ranges#cidrIPv6
   */
  readonly cidrIPv6: string;

  /**
   * A description for the security group rule that references this IPv6 address range. 
 Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*
   *
   * @schema SecurityGroupSpecForProviderEgressIpv6Ranges#description
   */
  readonly description?: string;

}

/**
 * PrefixListID describes a prefix list ID.
 *
 * @schema SecurityGroupSpecForProviderEgressPrefixListIds
 */
export interface SecurityGroupSpecForProviderEgressPrefixListIds {
  /**
   * A description for the security group rule that references this prefix list ID. 
 Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*
   *
   * @schema SecurityGroupSpecForProviderEgressPrefixListIds#description
   */
  readonly description?: string;

  /**
   * The ID of the prefix.
   *
   * @schema SecurityGroupSpecForProviderEgressPrefixListIds#prefixListId
   */
  readonly prefixListId: string;

}

/**
 * UserIDGroupPair describes a security group and AWS account ID pair.
 *
 * @schema SecurityGroupSpecForProviderEgressUserIdGroupPairs
 */
export interface SecurityGroupSpecForProviderEgressUserIdGroupPairs {
  /**
   * A description for the security group rule that references this user ID group pair. 
 Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*
   *
   * @schema SecurityGroupSpecForProviderEgressUserIdGroupPairs#description
   */
  readonly description?: string;

  /**
   * The ID of the security group.
   *
   * @schema SecurityGroupSpecForProviderEgressUserIdGroupPairs#groupId
   */
  readonly groupId?: string;

  /**
   * The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID. 
 For a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.
   *
   * @schema SecurityGroupSpecForProviderEgressUserIdGroupPairs#groupName
   */
  readonly groupName?: string;

  /**
   * The ID of an AWS account. 
 For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned. 
 [EC2-Classic] Required when adding or removing rules that reference a security group in another AWS account.
   *
   * @schema SecurityGroupSpecForProviderEgressUserIdGroupPairs#userId
   */
  readonly userId?: string;

  /**
   * The ID of the VPC for the referenced security group, if applicable.
   *
   * @schema SecurityGroupSpecForProviderEgressUserIdGroupPairs#vpcId
   */
  readonly vpcId?: string;

  /**
   * The ID of the VPC peering connection, if applicable.
   *
   * @schema SecurityGroupSpecForProviderEgressUserIdGroupPairs#vpcPeeringConnectionId
   */
  readonly vpcPeeringConnectionId?: string;

}

/**
 * IPRange describes an IPv4 range.
 *
 * @schema SecurityGroupSpecForProviderIngressIpRanges
 */
export interface SecurityGroupSpecForProviderIngressIpRanges {
  /**
   * The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length.
   *
   * @schema SecurityGroupSpecForProviderIngressIpRanges#cidrIp
   */
  readonly cidrIp: string;

  /**
   * A description for the security group rule that references this IPv4 address range. 
 Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*
   *
   * @schema SecurityGroupSpecForProviderIngressIpRanges#description
   */
  readonly description?: string;

}

/**
 * IPv6Range describes an IPv6 range.
 *
 * @schema SecurityGroupSpecForProviderIngressIpv6Ranges
 */
export interface SecurityGroupSpecForProviderIngressIpv6Ranges {
  /**
   * The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length.
   *
   * @schema SecurityGroupSpecForProviderIngressIpv6Ranges#cidrIPv6
   */
  readonly cidrIPv6: string;

  /**
   * A description for the security group rule that references this IPv6 address range. 
 Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*
   *
   * @schema SecurityGroupSpecForProviderIngressIpv6Ranges#description
   */
  readonly description?: string;

}

/**
 * PrefixListID describes a prefix list ID.
 *
 * @schema SecurityGroupSpecForProviderIngressPrefixListIds
 */
export interface SecurityGroupSpecForProviderIngressPrefixListIds {
  /**
   * A description for the security group rule that references this prefix list ID. 
 Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*
   *
   * @schema SecurityGroupSpecForProviderIngressPrefixListIds#description
   */
  readonly description?: string;

  /**
   * The ID of the prefix.
   *
   * @schema SecurityGroupSpecForProviderIngressPrefixListIds#prefixListId
   */
  readonly prefixListId: string;

}

/**
 * UserIDGroupPair describes a security group and AWS account ID pair.
 *
 * @schema SecurityGroupSpecForProviderIngressUserIdGroupPairs
 */
export interface SecurityGroupSpecForProviderIngressUserIdGroupPairs {
  /**
   * A description for the security group rule that references this user ID group pair. 
 Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*
   *
   * @schema SecurityGroupSpecForProviderIngressUserIdGroupPairs#description
   */
  readonly description?: string;

  /**
   * The ID of the security group.
   *
   * @schema SecurityGroupSpecForProviderIngressUserIdGroupPairs#groupId
   */
  readonly groupId?: string;

  /**
   * The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID. 
 For a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.
   *
   * @schema SecurityGroupSpecForProviderIngressUserIdGroupPairs#groupName
   */
  readonly groupName?: string;

  /**
   * The ID of an AWS account. 
 For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned. 
 [EC2-Classic] Required when adding or removing rules that reference a security group in another AWS account.
   *
   * @schema SecurityGroupSpecForProviderIngressUserIdGroupPairs#userId
   */
  readonly userId?: string;

  /**
   * The ID of the VPC for the referenced security group, if applicable.
   *
   * @schema SecurityGroupSpecForProviderIngressUserIdGroupPairs#vpcId
   */
  readonly vpcId?: string;

  /**
   * The ID of the VPC peering connection, if applicable.
   *
   * @schema SecurityGroupSpecForProviderIngressUserIdGroupPairs#vpcPeeringConnectionId
   */
  readonly vpcPeeringConnectionId?: string;

}

