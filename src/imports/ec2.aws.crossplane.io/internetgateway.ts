// generated by cdk8s
import { ApiObject } from 'cdk8s';
import { Construct } from 'constructs';

/**
 * An InternetGateway is a managed resource that represents an AWS VPC Internet Gateway.
 *
 * @schema InternetGateway
 */
export class InternetGateway extends ApiObject {
  /**
   * Defines a "InternetGateway" API object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: InternetGatewayOptions) {
    super(scope, name, {
      ...options,
      kind: 'InternetGateway',
      apiVersion: 'ec2.aws.crossplane.io/v1beta1',
    });
  }
}

/**
 * An InternetGateway is a managed resource that represents an AWS VPC Internet Gateway.
 *
 * @schema InternetGateway
 */
export interface InternetGatewayOptions {
  /**
   * @schema InternetGateway#metadata
   */
  readonly metadata?: any;

  /**
   * An InternetGatewaySpec defines the desired state of an InternetGateway.
   *
   * @schema InternetGateway#spec
   */
  readonly spec: InternetGatewaySpec;

}

/**
 * An InternetGatewaySpec defines the desired state of an InternetGateway.
 *
 * @schema InternetGatewaySpec
 */
export interface InternetGatewaySpec {
  /**
   * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
   *
   * @schema InternetGatewaySpec#deletionPolicy
   */
  readonly deletionPolicy?: InternetGatewaySpecDeletionPolicy;

  /**
   * InternetGatewayParameters define the desired state of an AWS VPC Internet Gateway.
   *
   * @schema InternetGatewaySpec#forProvider
   */
  readonly forProvider: InternetGatewaySpecForProvider;

  /**
   * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
   *
   * @schema InternetGatewaySpec#providerConfigRef
   */
  readonly providerConfigRef?: InternetGatewaySpecProviderConfigRef;

  /**
   * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
   *
   * @schema InternetGatewaySpec#providerRef
   */
  readonly providerRef?: InternetGatewaySpecProviderRef;

  /**
   * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
   *
   * @schema InternetGatewaySpec#writeConnectionSecretToRef
   */
  readonly writeConnectionSecretToRef?: InternetGatewaySpecWriteConnectionSecretToRef;

}

/**
 * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
 *
 * @schema InternetGatewaySpecDeletionPolicy
 */
export enum InternetGatewaySpecDeletionPolicy {
  /** Orphan */
  ORPHAN = "Orphan",
  /** Delete */
  DELETE = "Delete",
}

/**
 * InternetGatewayParameters define the desired state of an AWS VPC Internet Gateway.
 *
 * @schema InternetGatewaySpecForProvider
 */
export interface InternetGatewaySpecForProvider {
  /**
   * Region is the region you'd like your VPC to be created in.
   *
   * @schema InternetGatewaySpecForProvider#region
   */
  readonly region?: string;

  /**
   * Tags represents to current ec2 tags.
   *
   * @schema InternetGatewaySpecForProvider#tags
   */
  readonly tags?: InternetGatewaySpecForProviderTags[];

  /**
   * VPCID is the ID of the VPC.
   *
   * @schema InternetGatewaySpecForProvider#vpcId
   */
  readonly vpcId?: string;

  /**
   * VPCIDRef references a VPC to and retrieves its vpcId
   *
   * @schema InternetGatewaySpecForProvider#vpcIdRef
   */
  readonly vpcIdRef?: InternetGatewaySpecForProviderVpcIdRef;

  /**
   * VPCIDSelector selects a reference to a VPC to and retrieves its vpcId
   *
   * @schema InternetGatewaySpecForProvider#vpcIdSelector
   */
  readonly vpcIdSelector?: InternetGatewaySpecForProviderVpcIdSelector;

}

/**
 * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
 *
 * @schema InternetGatewaySpecProviderConfigRef
 */
export interface InternetGatewaySpecProviderConfigRef {
  /**
   * Name of the referenced object.
   *
   * @schema InternetGatewaySpecProviderConfigRef#name
   */
  readonly name: string;

}

/**
 * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
 *
 * @schema InternetGatewaySpecProviderRef
 */
export interface InternetGatewaySpecProviderRef {
  /**
   * Name of the referenced object.
   *
   * @schema InternetGatewaySpecProviderRef#name
   */
  readonly name: string;

}

/**
 * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
 *
 * @schema InternetGatewaySpecWriteConnectionSecretToRef
 */
export interface InternetGatewaySpecWriteConnectionSecretToRef {
  /**
   * Name of the secret.
   *
   * @schema InternetGatewaySpecWriteConnectionSecretToRef#name
   */
  readonly name: string;

  /**
   * Namespace of the secret.
   *
   * @schema InternetGatewaySpecWriteConnectionSecretToRef#namespace
   */
  readonly namespace: string;

}

/**
 * Tag defines a tag
 *
 * @schema InternetGatewaySpecForProviderTags
 */
export interface InternetGatewaySpecForProviderTags {
  /**
   * Key is the name of the tag.
   *
   * @schema InternetGatewaySpecForProviderTags#key
   */
  readonly key: string;

  /**
   * Value is the value of the tag.
   *
   * @schema InternetGatewaySpecForProviderTags#value
   */
  readonly value: string;

}

/**
 * VPCIDRef references a VPC to and retrieves its vpcId
 *
 * @schema InternetGatewaySpecForProviderVpcIdRef
 */
export interface InternetGatewaySpecForProviderVpcIdRef {
  /**
   * Name of the referenced object.
   *
   * @schema InternetGatewaySpecForProviderVpcIdRef#name
   */
  readonly name: string;

}

/**
 * VPCIDSelector selects a reference to a VPC to and retrieves its vpcId
 *
 * @schema InternetGatewaySpecForProviderVpcIdSelector
 */
export interface InternetGatewaySpecForProviderVpcIdSelector {
  /**
   * MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
   *
   * @schema InternetGatewaySpecForProviderVpcIdSelector#matchControllerRef
   */
  readonly matchControllerRef?: boolean;

  /**
   * MatchLabels ensures an object with matching labels is selected.
   *
   * @schema InternetGatewaySpecForProviderVpcIdSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

