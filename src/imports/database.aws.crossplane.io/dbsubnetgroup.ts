// generated by cdk8s
import { ApiObject } from 'cdk8s';
import { Construct } from 'constructs';

/**
 * A DBSubnetGroup is a managed resource that represents an AWS VPC Database Subnet Group.
 *
 * @schema DBSubnetGroup
 */
export class DbSubnetGroup extends ApiObject {
  /**
   * Defines a "DBSubnetGroup" API object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: DbSubnetGroupOptions) {
    super(scope, name, {
      ...options,
      kind: 'DBSubnetGroup',
      apiVersion: 'database.aws.crossplane.io/v1beta1',
    });
  }
}

/**
 * A DBSubnetGroup is a managed resource that represents an AWS VPC Database Subnet Group.
 *
 * @schema DBSubnetGroup
 */
export interface DbSubnetGroupOptions {
  /**
   * @schema DBSubnetGroup#metadata
   */
  readonly metadata?: any;

  /**
   * A DBSubnetGroupSpec defines the desired state of a DBSubnetGroup.
   *
   * @schema DBSubnetGroup#spec
   */
  readonly spec: DbSubnetGroupSpec;

}

/**
 * A DBSubnetGroupSpec defines the desired state of a DBSubnetGroup.
 *
 * @schema DbSubnetGroupSpec
 */
export interface DbSubnetGroupSpec {
  /**
   * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
   *
   * @schema DbSubnetGroupSpec#deletionPolicy
   */
  readonly deletionPolicy?: DbSubnetGroupSpecDeletionPolicy;

  /**
   * DBSubnetGroupParameters define the desired state of an AWS VPC Database Subnet Group.
   *
   * @schema DbSubnetGroupSpec#forProvider
   */
  readonly forProvider?: DbSubnetGroupSpecForProvider;

  /**
   * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
   *
   * @schema DbSubnetGroupSpec#providerConfigRef
   */
  readonly providerConfigRef?: DbSubnetGroupSpecProviderConfigRef;

  /**
   * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
   *
   * @schema DbSubnetGroupSpec#providerRef
   */
  readonly providerRef?: DbSubnetGroupSpecProviderRef;

  /**
   * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
   *
   * @schema DbSubnetGroupSpec#writeConnectionSecretToRef
   */
  readonly writeConnectionSecretToRef?: DbSubnetGroupSpecWriteConnectionSecretToRef;

}

/**
 * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
 *
 * @schema DbSubnetGroupSpecDeletionPolicy
 */
export enum DbSubnetGroupSpecDeletionPolicy {
  /** Orphan */
  ORPHAN = "Orphan",
  /** Delete */
  DELETE = "Delete",
}

/**
 * DBSubnetGroupParameters define the desired state of an AWS VPC Database Subnet Group.
 *
 * @schema DbSubnetGroupSpecForProvider
 */
export interface DbSubnetGroupSpecForProvider {
  /**
   * The description for the DB subnet group.
   *
   * @schema DbSubnetGroupSpecForProvider#description
   */
  readonly description: string;

  /**
   * Region is the region you'd like your DBSubnetGroup to be created in.
   *
   * @schema DbSubnetGroupSpecForProvider#region
   */
  readonly region?: string;

  /**
   * SubnetIDRefs is a set of references that each retrieve the subnetID from the referenced Subnet
   *
   * @schema DbSubnetGroupSpecForProvider#subnetIdRefs
   */
  readonly subnetIdRefs?: DbSubnetGroupSpecForProviderSubnetIdRefs[];

  /**
   * SubnetIDSelector selects a set of references that each retrieve the subnetID from the referenced Subnet
   *
   * @schema DbSubnetGroupSpecForProvider#subnetIdSelector
   */
  readonly subnetIdSelector?: DbSubnetGroupSpecForProviderSubnetIdSelector;

  /**
   * The EC2 Subnet IDs for the DB subnet group.
   *
   * @schema DbSubnetGroupSpecForProvider#subnetIds
   */
  readonly subnetIds?: string[];

  /**
   * A list of tags. For more information, see Tagging Amazon RDS Resources (http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html) in the Amazon RDS User Guide.
   *
   * @schema DbSubnetGroupSpecForProvider#tags
   */
  readonly tags?: DbSubnetGroupSpecForProviderTags[];

}

/**
 * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
 *
 * @schema DbSubnetGroupSpecProviderConfigRef
 */
export interface DbSubnetGroupSpecProviderConfigRef {
  /**
   * Name of the referenced object.
   *
   * @schema DbSubnetGroupSpecProviderConfigRef#name
   */
  readonly name: string;

}

/**
 * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
 *
 * @schema DbSubnetGroupSpecProviderRef
 */
export interface DbSubnetGroupSpecProviderRef {
  /**
   * Name of the referenced object.
   *
   * @schema DbSubnetGroupSpecProviderRef#name
   */
  readonly name: string;

}

/**
 * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
 *
 * @schema DbSubnetGroupSpecWriteConnectionSecretToRef
 */
export interface DbSubnetGroupSpecWriteConnectionSecretToRef {
  /**
   * Name of the secret.
   *
   * @schema DbSubnetGroupSpecWriteConnectionSecretToRef#name
   */
  readonly name: string;

  /**
   * Namespace of the secret.
   *
   * @schema DbSubnetGroupSpecWriteConnectionSecretToRef#namespace
   */
  readonly namespace: string;

}

/**
 * A Reference to a named object.
 *
 * @schema DbSubnetGroupSpecForProviderSubnetIdRefs
 */
export interface DbSubnetGroupSpecForProviderSubnetIdRefs {
  /**
   * Name of the referenced object.
   *
   * @schema DbSubnetGroupSpecForProviderSubnetIdRefs#name
   */
  readonly name: string;

}

/**
 * SubnetIDSelector selects a set of references that each retrieve the subnetID from the referenced Subnet
 *
 * @schema DbSubnetGroupSpecForProviderSubnetIdSelector
 */
export interface DbSubnetGroupSpecForProviderSubnetIdSelector {
  /**
   * MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
   *
   * @schema DbSubnetGroupSpecForProviderSubnetIdSelector#matchControllerRef
   */
  readonly matchControllerRef?: boolean;

  /**
   * MatchLabels ensures an object with matching labels is selected.
   *
   * @schema DbSubnetGroupSpecForProviderSubnetIdSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Tag is a metadata assigned to an Amazon RDS resource consisting of a key-value pair. Please also see https://docs.aws.amazon.com/goto/WebAPI/rds-2014-10-31/Tag
 *
 * @schema DbSubnetGroupSpecForProviderTags
 */
export interface DbSubnetGroupSpecForProviderTags {
  /**
   * A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
   *
   * @schema DbSubnetGroupSpecForProviderTags#key
   */
  readonly key?: string;

  /**
   * A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and can't be prefixed with "aws:" or "rds:". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").
   *
   * @schema DbSubnetGroupSpecForProviderTags#value
   */
  readonly value?: string;

}

